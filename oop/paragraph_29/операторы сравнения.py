"""Как следует из табл. 29.1, классы могут определять методы, реализующие все
шесть операций сравнения: <, >, <=, >=, == и !=. Обычно эти методы достаточно
просты в реализации, но имейте в виду следующее:
•• В отличие от методов __add__/__radd__, обсуждавшихся выше, методы срав-
нения не имеют правосторонних версий. Вместо этого, когда операцию
сравнения поддерживает только один операнд, используются зеркальные
методы сравнивания (например, методы __lt__ и __gt__ являются зеркаль-
ными по отношению друг к другу).
•• Среди операторов сравнения нет неявных взаимоотношений. Суть в том,
что истинность операции == не предполагает ложность операции !=, напри-
мер, чтобы гарантировать корректное поведение обоих операторов, требует-
ся реализовать оба метода, __eq__ и __ne__.
•• В Python 2.6 все операции сравнения можно"""

class C:
    def __init__(self,val):
        self.val=val
    def __lt__(self, other):
        print('__lt__')
        return self.val<other

    def __gt__(self, other):
        print('__gt__')
        return self.val>other

obj=C(12)
print(obj<11)
print(11>obj) # здесь от операнда наш объект слева поэтому будет вызван не gt а lt так как это зеркально
print(obj > 10)
