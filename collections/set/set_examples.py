x = set('spam')
y = {'h', 'a', 'm'}

print(x, y)
print(x | y)
print(set.union(x, y), 'объединение х с у множеств')
print(x - y)
print(set.difference(x, y), 'разница х от у')
print(x & y)
print(set.intersection(x, y), 'пересечение х с у множеств')
print({x ** 2 for x in [1, 2, 3, 4]}, 'генератор множеств')
print(x ^ y, 'XOR исключающее ИЛИ()')
x > y, x < y  # Надмножество, подмножество
# isinstance()#определеят принадлежность обїекта к определённому типу
x ^ y  # Симметрическая разность (XOR)
print({1, 2, 3}.union([4]))
x.add(5)
for i in x:
    print(i)
'''из-за особенностей
реализации множества могут включать объекты только неизменяемых (или
так называемых «хешируемых») типов. Отсюда следует, что списки и словари
не могут добавляться в множества, однако вы можете использовать кортежи,
если появится необходимость сохранять составные значения.'''
print('__________________________________________________________')
S = {1.23}
# S.add([1,2,3]) # Добавляться могут только неизменяемые объекты
# TypeError: unhashable type: ‘list’
S.add((1, 2, 3))
S.update((4, 5))
print(S)
'''Кортежи в множествах могут использоваться, например, для хранения дат,
записей, IP-адресов и так далее (подробнее о кортежах рассказывается ниже,
в этой же части книги). Сами по себе множества являются изменяемыми объ-
ектами и потому не могут вкладываться в другие множества, однако, если вам
потребуется сохранить одно множество внутри другого множества, создайте
множество с помощью встроенной функции frozenset, которая действует точно
так же, как функция set, но создает неизменяемое множество, которое невоз-
можно изменить и потому можно встраивать в другие множества.'''
S.add(frozenset({6, 7}))
print(S)
